#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3056451431007154119) {
   out_3056451431007154119[0] = 0;
   out_3056451431007154119[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3056451431007154119[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3056451431007154119[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3056451431007154119[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3056451431007154119[5] = -sin(in_vec[1]);
   out_3056451431007154119[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3056451431007154119[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3056451431007154119[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3056451431007154119[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3056451431007154119[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3056451431007154119[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3056451431007154119[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3056451431007154119[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3056451431007154119[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3056451431007154119[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3056451431007154119[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3056451431007154119[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1292429367592691243) {
   out_1292429367592691243[0] = delta_x[0] + nom_x[0];
   out_1292429367592691243[1] = delta_x[1] + nom_x[1];
   out_1292429367592691243[2] = delta_x[2] + nom_x[2];
   out_1292429367592691243[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1292429367592691243[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1292429367592691243[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1292429367592691243[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1292429367592691243[7] = delta_x[6] + nom_x[7];
   out_1292429367592691243[8] = delta_x[7] + nom_x[8];
   out_1292429367592691243[9] = delta_x[8] + nom_x[9];
   out_1292429367592691243[10] = delta_x[9] + nom_x[10];
   out_1292429367592691243[11] = delta_x[10] + nom_x[11];
   out_1292429367592691243[12] = delta_x[11] + nom_x[12];
   out_1292429367592691243[13] = delta_x[12] + nom_x[13];
   out_1292429367592691243[14] = delta_x[13] + nom_x[14];
   out_1292429367592691243[15] = delta_x[14] + nom_x[15];
   out_1292429367592691243[16] = delta_x[15] + nom_x[16];
   out_1292429367592691243[17] = delta_x[16] + nom_x[17];
   out_1292429367592691243[18] = delta_x[17] + nom_x[18];
   out_1292429367592691243[19] = delta_x[18] + nom_x[19];
   out_1292429367592691243[20] = delta_x[19] + nom_x[20];
   out_1292429367592691243[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7203208365257071560) {
   out_7203208365257071560[0] = -nom_x[0] + true_x[0];
   out_7203208365257071560[1] = -nom_x[1] + true_x[1];
   out_7203208365257071560[2] = -nom_x[2] + true_x[2];
   out_7203208365257071560[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7203208365257071560[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7203208365257071560[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7203208365257071560[6] = -nom_x[7] + true_x[7];
   out_7203208365257071560[7] = -nom_x[8] + true_x[8];
   out_7203208365257071560[8] = -nom_x[9] + true_x[9];
   out_7203208365257071560[9] = -nom_x[10] + true_x[10];
   out_7203208365257071560[10] = -nom_x[11] + true_x[11];
   out_7203208365257071560[11] = -nom_x[12] + true_x[12];
   out_7203208365257071560[12] = -nom_x[13] + true_x[13];
   out_7203208365257071560[13] = -nom_x[14] + true_x[14];
   out_7203208365257071560[14] = -nom_x[15] + true_x[15];
   out_7203208365257071560[15] = -nom_x[16] + true_x[16];
   out_7203208365257071560[16] = -nom_x[17] + true_x[17];
   out_7203208365257071560[17] = -nom_x[18] + true_x[18];
   out_7203208365257071560[18] = -nom_x[19] + true_x[19];
   out_7203208365257071560[19] = -nom_x[20] + true_x[20];
   out_7203208365257071560[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_9109133853090027472) {
   out_9109133853090027472[0] = 1.0;
   out_9109133853090027472[1] = 0;
   out_9109133853090027472[2] = 0;
   out_9109133853090027472[3] = 0;
   out_9109133853090027472[4] = 0;
   out_9109133853090027472[5] = 0;
   out_9109133853090027472[6] = 0;
   out_9109133853090027472[7] = 0;
   out_9109133853090027472[8] = 0;
   out_9109133853090027472[9] = 0;
   out_9109133853090027472[10] = 0;
   out_9109133853090027472[11] = 0;
   out_9109133853090027472[12] = 0;
   out_9109133853090027472[13] = 0;
   out_9109133853090027472[14] = 0;
   out_9109133853090027472[15] = 0;
   out_9109133853090027472[16] = 0;
   out_9109133853090027472[17] = 0;
   out_9109133853090027472[18] = 0;
   out_9109133853090027472[19] = 0;
   out_9109133853090027472[20] = 0;
   out_9109133853090027472[21] = 0;
   out_9109133853090027472[22] = 1.0;
   out_9109133853090027472[23] = 0;
   out_9109133853090027472[24] = 0;
   out_9109133853090027472[25] = 0;
   out_9109133853090027472[26] = 0;
   out_9109133853090027472[27] = 0;
   out_9109133853090027472[28] = 0;
   out_9109133853090027472[29] = 0;
   out_9109133853090027472[30] = 0;
   out_9109133853090027472[31] = 0;
   out_9109133853090027472[32] = 0;
   out_9109133853090027472[33] = 0;
   out_9109133853090027472[34] = 0;
   out_9109133853090027472[35] = 0;
   out_9109133853090027472[36] = 0;
   out_9109133853090027472[37] = 0;
   out_9109133853090027472[38] = 0;
   out_9109133853090027472[39] = 0;
   out_9109133853090027472[40] = 0;
   out_9109133853090027472[41] = 0;
   out_9109133853090027472[42] = 0;
   out_9109133853090027472[43] = 0;
   out_9109133853090027472[44] = 1.0;
   out_9109133853090027472[45] = 0;
   out_9109133853090027472[46] = 0;
   out_9109133853090027472[47] = 0;
   out_9109133853090027472[48] = 0;
   out_9109133853090027472[49] = 0;
   out_9109133853090027472[50] = 0;
   out_9109133853090027472[51] = 0;
   out_9109133853090027472[52] = 0;
   out_9109133853090027472[53] = 0;
   out_9109133853090027472[54] = 0;
   out_9109133853090027472[55] = 0;
   out_9109133853090027472[56] = 0;
   out_9109133853090027472[57] = 0;
   out_9109133853090027472[58] = 0;
   out_9109133853090027472[59] = 0;
   out_9109133853090027472[60] = 0;
   out_9109133853090027472[61] = 0;
   out_9109133853090027472[62] = 0;
   out_9109133853090027472[63] = 0;
   out_9109133853090027472[64] = 0;
   out_9109133853090027472[65] = 0;
   out_9109133853090027472[66] = -0.5*state[4];
   out_9109133853090027472[67] = -0.5*state[5];
   out_9109133853090027472[68] = -0.5*state[6];
   out_9109133853090027472[69] = 0;
   out_9109133853090027472[70] = 0;
   out_9109133853090027472[71] = 0;
   out_9109133853090027472[72] = 0;
   out_9109133853090027472[73] = 0;
   out_9109133853090027472[74] = 0;
   out_9109133853090027472[75] = 0;
   out_9109133853090027472[76] = 0;
   out_9109133853090027472[77] = 0;
   out_9109133853090027472[78] = 0;
   out_9109133853090027472[79] = 0;
   out_9109133853090027472[80] = 0;
   out_9109133853090027472[81] = 0;
   out_9109133853090027472[82] = 0;
   out_9109133853090027472[83] = 0;
   out_9109133853090027472[84] = 0;
   out_9109133853090027472[85] = 0;
   out_9109133853090027472[86] = 0;
   out_9109133853090027472[87] = 0.5*state[3];
   out_9109133853090027472[88] = 0.5*state[6];
   out_9109133853090027472[89] = -0.5*state[5];
   out_9109133853090027472[90] = 0;
   out_9109133853090027472[91] = 0;
   out_9109133853090027472[92] = 0;
   out_9109133853090027472[93] = 0;
   out_9109133853090027472[94] = 0;
   out_9109133853090027472[95] = 0;
   out_9109133853090027472[96] = 0;
   out_9109133853090027472[97] = 0;
   out_9109133853090027472[98] = 0;
   out_9109133853090027472[99] = 0;
   out_9109133853090027472[100] = 0;
   out_9109133853090027472[101] = 0;
   out_9109133853090027472[102] = 0;
   out_9109133853090027472[103] = 0;
   out_9109133853090027472[104] = 0;
   out_9109133853090027472[105] = 0;
   out_9109133853090027472[106] = 0;
   out_9109133853090027472[107] = 0;
   out_9109133853090027472[108] = -0.5*state[6];
   out_9109133853090027472[109] = 0.5*state[3];
   out_9109133853090027472[110] = 0.5*state[4];
   out_9109133853090027472[111] = 0;
   out_9109133853090027472[112] = 0;
   out_9109133853090027472[113] = 0;
   out_9109133853090027472[114] = 0;
   out_9109133853090027472[115] = 0;
   out_9109133853090027472[116] = 0;
   out_9109133853090027472[117] = 0;
   out_9109133853090027472[118] = 0;
   out_9109133853090027472[119] = 0;
   out_9109133853090027472[120] = 0;
   out_9109133853090027472[121] = 0;
   out_9109133853090027472[122] = 0;
   out_9109133853090027472[123] = 0;
   out_9109133853090027472[124] = 0;
   out_9109133853090027472[125] = 0;
   out_9109133853090027472[126] = 0;
   out_9109133853090027472[127] = 0;
   out_9109133853090027472[128] = 0;
   out_9109133853090027472[129] = 0.5*state[5];
   out_9109133853090027472[130] = -0.5*state[4];
   out_9109133853090027472[131] = 0.5*state[3];
   out_9109133853090027472[132] = 0;
   out_9109133853090027472[133] = 0;
   out_9109133853090027472[134] = 0;
   out_9109133853090027472[135] = 0;
   out_9109133853090027472[136] = 0;
   out_9109133853090027472[137] = 0;
   out_9109133853090027472[138] = 0;
   out_9109133853090027472[139] = 0;
   out_9109133853090027472[140] = 0;
   out_9109133853090027472[141] = 0;
   out_9109133853090027472[142] = 0;
   out_9109133853090027472[143] = 0;
   out_9109133853090027472[144] = 0;
   out_9109133853090027472[145] = 0;
   out_9109133853090027472[146] = 0;
   out_9109133853090027472[147] = 0;
   out_9109133853090027472[148] = 0;
   out_9109133853090027472[149] = 0;
   out_9109133853090027472[150] = 0;
   out_9109133853090027472[151] = 0;
   out_9109133853090027472[152] = 0;
   out_9109133853090027472[153] = 1.0;
   out_9109133853090027472[154] = 0;
   out_9109133853090027472[155] = 0;
   out_9109133853090027472[156] = 0;
   out_9109133853090027472[157] = 0;
   out_9109133853090027472[158] = 0;
   out_9109133853090027472[159] = 0;
   out_9109133853090027472[160] = 0;
   out_9109133853090027472[161] = 0;
   out_9109133853090027472[162] = 0;
   out_9109133853090027472[163] = 0;
   out_9109133853090027472[164] = 0;
   out_9109133853090027472[165] = 0;
   out_9109133853090027472[166] = 0;
   out_9109133853090027472[167] = 0;
   out_9109133853090027472[168] = 0;
   out_9109133853090027472[169] = 0;
   out_9109133853090027472[170] = 0;
   out_9109133853090027472[171] = 0;
   out_9109133853090027472[172] = 0;
   out_9109133853090027472[173] = 0;
   out_9109133853090027472[174] = 0;
   out_9109133853090027472[175] = 1.0;
   out_9109133853090027472[176] = 0;
   out_9109133853090027472[177] = 0;
   out_9109133853090027472[178] = 0;
   out_9109133853090027472[179] = 0;
   out_9109133853090027472[180] = 0;
   out_9109133853090027472[181] = 0;
   out_9109133853090027472[182] = 0;
   out_9109133853090027472[183] = 0;
   out_9109133853090027472[184] = 0;
   out_9109133853090027472[185] = 0;
   out_9109133853090027472[186] = 0;
   out_9109133853090027472[187] = 0;
   out_9109133853090027472[188] = 0;
   out_9109133853090027472[189] = 0;
   out_9109133853090027472[190] = 0;
   out_9109133853090027472[191] = 0;
   out_9109133853090027472[192] = 0;
   out_9109133853090027472[193] = 0;
   out_9109133853090027472[194] = 0;
   out_9109133853090027472[195] = 0;
   out_9109133853090027472[196] = 0;
   out_9109133853090027472[197] = 1.0;
   out_9109133853090027472[198] = 0;
   out_9109133853090027472[199] = 0;
   out_9109133853090027472[200] = 0;
   out_9109133853090027472[201] = 0;
   out_9109133853090027472[202] = 0;
   out_9109133853090027472[203] = 0;
   out_9109133853090027472[204] = 0;
   out_9109133853090027472[205] = 0;
   out_9109133853090027472[206] = 0;
   out_9109133853090027472[207] = 0;
   out_9109133853090027472[208] = 0;
   out_9109133853090027472[209] = 0;
   out_9109133853090027472[210] = 0;
   out_9109133853090027472[211] = 0;
   out_9109133853090027472[212] = 0;
   out_9109133853090027472[213] = 0;
   out_9109133853090027472[214] = 0;
   out_9109133853090027472[215] = 0;
   out_9109133853090027472[216] = 0;
   out_9109133853090027472[217] = 0;
   out_9109133853090027472[218] = 0;
   out_9109133853090027472[219] = 1.0;
   out_9109133853090027472[220] = 0;
   out_9109133853090027472[221] = 0;
   out_9109133853090027472[222] = 0;
   out_9109133853090027472[223] = 0;
   out_9109133853090027472[224] = 0;
   out_9109133853090027472[225] = 0;
   out_9109133853090027472[226] = 0;
   out_9109133853090027472[227] = 0;
   out_9109133853090027472[228] = 0;
   out_9109133853090027472[229] = 0;
   out_9109133853090027472[230] = 0;
   out_9109133853090027472[231] = 0;
   out_9109133853090027472[232] = 0;
   out_9109133853090027472[233] = 0;
   out_9109133853090027472[234] = 0;
   out_9109133853090027472[235] = 0;
   out_9109133853090027472[236] = 0;
   out_9109133853090027472[237] = 0;
   out_9109133853090027472[238] = 0;
   out_9109133853090027472[239] = 0;
   out_9109133853090027472[240] = 0;
   out_9109133853090027472[241] = 1.0;
   out_9109133853090027472[242] = 0;
   out_9109133853090027472[243] = 0;
   out_9109133853090027472[244] = 0;
   out_9109133853090027472[245] = 0;
   out_9109133853090027472[246] = 0;
   out_9109133853090027472[247] = 0;
   out_9109133853090027472[248] = 0;
   out_9109133853090027472[249] = 0;
   out_9109133853090027472[250] = 0;
   out_9109133853090027472[251] = 0;
   out_9109133853090027472[252] = 0;
   out_9109133853090027472[253] = 0;
   out_9109133853090027472[254] = 0;
   out_9109133853090027472[255] = 0;
   out_9109133853090027472[256] = 0;
   out_9109133853090027472[257] = 0;
   out_9109133853090027472[258] = 0;
   out_9109133853090027472[259] = 0;
   out_9109133853090027472[260] = 0;
   out_9109133853090027472[261] = 0;
   out_9109133853090027472[262] = 0;
   out_9109133853090027472[263] = 1.0;
   out_9109133853090027472[264] = 0;
   out_9109133853090027472[265] = 0;
   out_9109133853090027472[266] = 0;
   out_9109133853090027472[267] = 0;
   out_9109133853090027472[268] = 0;
   out_9109133853090027472[269] = 0;
   out_9109133853090027472[270] = 0;
   out_9109133853090027472[271] = 0;
   out_9109133853090027472[272] = 0;
   out_9109133853090027472[273] = 0;
   out_9109133853090027472[274] = 0;
   out_9109133853090027472[275] = 0;
   out_9109133853090027472[276] = 0;
   out_9109133853090027472[277] = 0;
   out_9109133853090027472[278] = 0;
   out_9109133853090027472[279] = 0;
   out_9109133853090027472[280] = 0;
   out_9109133853090027472[281] = 0;
   out_9109133853090027472[282] = 0;
   out_9109133853090027472[283] = 0;
   out_9109133853090027472[284] = 0;
   out_9109133853090027472[285] = 1.0;
   out_9109133853090027472[286] = 0;
   out_9109133853090027472[287] = 0;
   out_9109133853090027472[288] = 0;
   out_9109133853090027472[289] = 0;
   out_9109133853090027472[290] = 0;
   out_9109133853090027472[291] = 0;
   out_9109133853090027472[292] = 0;
   out_9109133853090027472[293] = 0;
   out_9109133853090027472[294] = 0;
   out_9109133853090027472[295] = 0;
   out_9109133853090027472[296] = 0;
   out_9109133853090027472[297] = 0;
   out_9109133853090027472[298] = 0;
   out_9109133853090027472[299] = 0;
   out_9109133853090027472[300] = 0;
   out_9109133853090027472[301] = 0;
   out_9109133853090027472[302] = 0;
   out_9109133853090027472[303] = 0;
   out_9109133853090027472[304] = 0;
   out_9109133853090027472[305] = 0;
   out_9109133853090027472[306] = 0;
   out_9109133853090027472[307] = 1.0;
   out_9109133853090027472[308] = 0;
   out_9109133853090027472[309] = 0;
   out_9109133853090027472[310] = 0;
   out_9109133853090027472[311] = 0;
   out_9109133853090027472[312] = 0;
   out_9109133853090027472[313] = 0;
   out_9109133853090027472[314] = 0;
   out_9109133853090027472[315] = 0;
   out_9109133853090027472[316] = 0;
   out_9109133853090027472[317] = 0;
   out_9109133853090027472[318] = 0;
   out_9109133853090027472[319] = 0;
   out_9109133853090027472[320] = 0;
   out_9109133853090027472[321] = 0;
   out_9109133853090027472[322] = 0;
   out_9109133853090027472[323] = 0;
   out_9109133853090027472[324] = 0;
   out_9109133853090027472[325] = 0;
   out_9109133853090027472[326] = 0;
   out_9109133853090027472[327] = 0;
   out_9109133853090027472[328] = 0;
   out_9109133853090027472[329] = 1.0;
   out_9109133853090027472[330] = 0;
   out_9109133853090027472[331] = 0;
   out_9109133853090027472[332] = 0;
   out_9109133853090027472[333] = 0;
   out_9109133853090027472[334] = 0;
   out_9109133853090027472[335] = 0;
   out_9109133853090027472[336] = 0;
   out_9109133853090027472[337] = 0;
   out_9109133853090027472[338] = 0;
   out_9109133853090027472[339] = 0;
   out_9109133853090027472[340] = 0;
   out_9109133853090027472[341] = 0;
   out_9109133853090027472[342] = 0;
   out_9109133853090027472[343] = 0;
   out_9109133853090027472[344] = 0;
   out_9109133853090027472[345] = 0;
   out_9109133853090027472[346] = 0;
   out_9109133853090027472[347] = 0;
   out_9109133853090027472[348] = 0;
   out_9109133853090027472[349] = 0;
   out_9109133853090027472[350] = 0;
   out_9109133853090027472[351] = 1.0;
   out_9109133853090027472[352] = 0;
   out_9109133853090027472[353] = 0;
   out_9109133853090027472[354] = 0;
   out_9109133853090027472[355] = 0;
   out_9109133853090027472[356] = 0;
   out_9109133853090027472[357] = 0;
   out_9109133853090027472[358] = 0;
   out_9109133853090027472[359] = 0;
   out_9109133853090027472[360] = 0;
   out_9109133853090027472[361] = 0;
   out_9109133853090027472[362] = 0;
   out_9109133853090027472[363] = 0;
   out_9109133853090027472[364] = 0;
   out_9109133853090027472[365] = 0;
   out_9109133853090027472[366] = 0;
   out_9109133853090027472[367] = 0;
   out_9109133853090027472[368] = 0;
   out_9109133853090027472[369] = 0;
   out_9109133853090027472[370] = 0;
   out_9109133853090027472[371] = 0;
   out_9109133853090027472[372] = 0;
   out_9109133853090027472[373] = 1.0;
   out_9109133853090027472[374] = 0;
   out_9109133853090027472[375] = 0;
   out_9109133853090027472[376] = 0;
   out_9109133853090027472[377] = 0;
   out_9109133853090027472[378] = 0;
   out_9109133853090027472[379] = 0;
   out_9109133853090027472[380] = 0;
   out_9109133853090027472[381] = 0;
   out_9109133853090027472[382] = 0;
   out_9109133853090027472[383] = 0;
   out_9109133853090027472[384] = 0;
   out_9109133853090027472[385] = 0;
   out_9109133853090027472[386] = 0;
   out_9109133853090027472[387] = 0;
   out_9109133853090027472[388] = 0;
   out_9109133853090027472[389] = 0;
   out_9109133853090027472[390] = 0;
   out_9109133853090027472[391] = 0;
   out_9109133853090027472[392] = 0;
   out_9109133853090027472[393] = 0;
   out_9109133853090027472[394] = 0;
   out_9109133853090027472[395] = 1.0;
   out_9109133853090027472[396] = 0;
   out_9109133853090027472[397] = 0;
   out_9109133853090027472[398] = 0;
   out_9109133853090027472[399] = 0;
   out_9109133853090027472[400] = 0;
   out_9109133853090027472[401] = 0;
   out_9109133853090027472[402] = 0;
   out_9109133853090027472[403] = 0;
   out_9109133853090027472[404] = 0;
   out_9109133853090027472[405] = 0;
   out_9109133853090027472[406] = 0;
   out_9109133853090027472[407] = 0;
   out_9109133853090027472[408] = 0;
   out_9109133853090027472[409] = 0;
   out_9109133853090027472[410] = 0;
   out_9109133853090027472[411] = 0;
   out_9109133853090027472[412] = 0;
   out_9109133853090027472[413] = 0;
   out_9109133853090027472[414] = 0;
   out_9109133853090027472[415] = 0;
   out_9109133853090027472[416] = 0;
   out_9109133853090027472[417] = 1.0;
   out_9109133853090027472[418] = 0;
   out_9109133853090027472[419] = 0;
   out_9109133853090027472[420] = 0;
   out_9109133853090027472[421] = 0;
   out_9109133853090027472[422] = 0;
   out_9109133853090027472[423] = 0;
   out_9109133853090027472[424] = 0;
   out_9109133853090027472[425] = 0;
   out_9109133853090027472[426] = 0;
   out_9109133853090027472[427] = 0;
   out_9109133853090027472[428] = 0;
   out_9109133853090027472[429] = 0;
   out_9109133853090027472[430] = 0;
   out_9109133853090027472[431] = 0;
   out_9109133853090027472[432] = 0;
   out_9109133853090027472[433] = 0;
   out_9109133853090027472[434] = 0;
   out_9109133853090027472[435] = 0;
   out_9109133853090027472[436] = 0;
   out_9109133853090027472[437] = 0;
   out_9109133853090027472[438] = 0;
   out_9109133853090027472[439] = 1.0;
   out_9109133853090027472[440] = 0;
   out_9109133853090027472[441] = 0;
   out_9109133853090027472[442] = 0;
   out_9109133853090027472[443] = 0;
   out_9109133853090027472[444] = 0;
   out_9109133853090027472[445] = 0;
   out_9109133853090027472[446] = 0;
   out_9109133853090027472[447] = 0;
   out_9109133853090027472[448] = 0;
   out_9109133853090027472[449] = 0;
   out_9109133853090027472[450] = 0;
   out_9109133853090027472[451] = 0;
   out_9109133853090027472[452] = 0;
   out_9109133853090027472[453] = 0;
   out_9109133853090027472[454] = 0;
   out_9109133853090027472[455] = 0;
   out_9109133853090027472[456] = 0;
   out_9109133853090027472[457] = 0;
   out_9109133853090027472[458] = 0;
   out_9109133853090027472[459] = 0;
   out_9109133853090027472[460] = 0;
   out_9109133853090027472[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1380210285864909136) {
   out_1380210285864909136[0] = dt*state[7] + state[0];
   out_1380210285864909136[1] = dt*state[8] + state[1];
   out_1380210285864909136[2] = dt*state[9] + state[2];
   out_1380210285864909136[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1380210285864909136[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1380210285864909136[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1380210285864909136[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1380210285864909136[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1380210285864909136[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1380210285864909136[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1380210285864909136[10] = state[10];
   out_1380210285864909136[11] = state[11];
   out_1380210285864909136[12] = state[12];
   out_1380210285864909136[13] = state[13];
   out_1380210285864909136[14] = state[14];
   out_1380210285864909136[15] = state[15];
   out_1380210285864909136[16] = state[16];
   out_1380210285864909136[17] = state[17];
   out_1380210285864909136[18] = state[18];
   out_1380210285864909136[19] = state[19];
   out_1380210285864909136[20] = state[20];
   out_1380210285864909136[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2511086909557190022) {
   out_2511086909557190022[0] = 1;
   out_2511086909557190022[1] = 0;
   out_2511086909557190022[2] = 0;
   out_2511086909557190022[3] = 0;
   out_2511086909557190022[4] = 0;
   out_2511086909557190022[5] = 0;
   out_2511086909557190022[6] = dt;
   out_2511086909557190022[7] = 0;
   out_2511086909557190022[8] = 0;
   out_2511086909557190022[9] = 0;
   out_2511086909557190022[10] = 0;
   out_2511086909557190022[11] = 0;
   out_2511086909557190022[12] = 0;
   out_2511086909557190022[13] = 0;
   out_2511086909557190022[14] = 0;
   out_2511086909557190022[15] = 0;
   out_2511086909557190022[16] = 0;
   out_2511086909557190022[17] = 0;
   out_2511086909557190022[18] = 0;
   out_2511086909557190022[19] = 0;
   out_2511086909557190022[20] = 0;
   out_2511086909557190022[21] = 0;
   out_2511086909557190022[22] = 1;
   out_2511086909557190022[23] = 0;
   out_2511086909557190022[24] = 0;
   out_2511086909557190022[25] = 0;
   out_2511086909557190022[26] = 0;
   out_2511086909557190022[27] = 0;
   out_2511086909557190022[28] = dt;
   out_2511086909557190022[29] = 0;
   out_2511086909557190022[30] = 0;
   out_2511086909557190022[31] = 0;
   out_2511086909557190022[32] = 0;
   out_2511086909557190022[33] = 0;
   out_2511086909557190022[34] = 0;
   out_2511086909557190022[35] = 0;
   out_2511086909557190022[36] = 0;
   out_2511086909557190022[37] = 0;
   out_2511086909557190022[38] = 0;
   out_2511086909557190022[39] = 0;
   out_2511086909557190022[40] = 0;
   out_2511086909557190022[41] = 0;
   out_2511086909557190022[42] = 0;
   out_2511086909557190022[43] = 0;
   out_2511086909557190022[44] = 1;
   out_2511086909557190022[45] = 0;
   out_2511086909557190022[46] = 0;
   out_2511086909557190022[47] = 0;
   out_2511086909557190022[48] = 0;
   out_2511086909557190022[49] = 0;
   out_2511086909557190022[50] = dt;
   out_2511086909557190022[51] = 0;
   out_2511086909557190022[52] = 0;
   out_2511086909557190022[53] = 0;
   out_2511086909557190022[54] = 0;
   out_2511086909557190022[55] = 0;
   out_2511086909557190022[56] = 0;
   out_2511086909557190022[57] = 0;
   out_2511086909557190022[58] = 0;
   out_2511086909557190022[59] = 0;
   out_2511086909557190022[60] = 0;
   out_2511086909557190022[61] = 0;
   out_2511086909557190022[62] = 0;
   out_2511086909557190022[63] = 0;
   out_2511086909557190022[64] = 0;
   out_2511086909557190022[65] = 0;
   out_2511086909557190022[66] = 1;
   out_2511086909557190022[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2511086909557190022[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2511086909557190022[69] = 0;
   out_2511086909557190022[70] = 0;
   out_2511086909557190022[71] = 0;
   out_2511086909557190022[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2511086909557190022[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2511086909557190022[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2511086909557190022[75] = 0;
   out_2511086909557190022[76] = 0;
   out_2511086909557190022[77] = 0;
   out_2511086909557190022[78] = 0;
   out_2511086909557190022[79] = 0;
   out_2511086909557190022[80] = 0;
   out_2511086909557190022[81] = 0;
   out_2511086909557190022[82] = 0;
   out_2511086909557190022[83] = 0;
   out_2511086909557190022[84] = 0;
   out_2511086909557190022[85] = 0;
   out_2511086909557190022[86] = 0;
   out_2511086909557190022[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2511086909557190022[88] = 1;
   out_2511086909557190022[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2511086909557190022[90] = 0;
   out_2511086909557190022[91] = 0;
   out_2511086909557190022[92] = 0;
   out_2511086909557190022[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2511086909557190022[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2511086909557190022[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2511086909557190022[96] = 0;
   out_2511086909557190022[97] = 0;
   out_2511086909557190022[98] = 0;
   out_2511086909557190022[99] = 0;
   out_2511086909557190022[100] = 0;
   out_2511086909557190022[101] = 0;
   out_2511086909557190022[102] = 0;
   out_2511086909557190022[103] = 0;
   out_2511086909557190022[104] = 0;
   out_2511086909557190022[105] = 0;
   out_2511086909557190022[106] = 0;
   out_2511086909557190022[107] = 0;
   out_2511086909557190022[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2511086909557190022[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2511086909557190022[110] = 1;
   out_2511086909557190022[111] = 0;
   out_2511086909557190022[112] = 0;
   out_2511086909557190022[113] = 0;
   out_2511086909557190022[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2511086909557190022[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2511086909557190022[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2511086909557190022[117] = 0;
   out_2511086909557190022[118] = 0;
   out_2511086909557190022[119] = 0;
   out_2511086909557190022[120] = 0;
   out_2511086909557190022[121] = 0;
   out_2511086909557190022[122] = 0;
   out_2511086909557190022[123] = 0;
   out_2511086909557190022[124] = 0;
   out_2511086909557190022[125] = 0;
   out_2511086909557190022[126] = 0;
   out_2511086909557190022[127] = 0;
   out_2511086909557190022[128] = 0;
   out_2511086909557190022[129] = 0;
   out_2511086909557190022[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2511086909557190022[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2511086909557190022[132] = 1;
   out_2511086909557190022[133] = 0;
   out_2511086909557190022[134] = 0;
   out_2511086909557190022[135] = 0;
   out_2511086909557190022[136] = 0;
   out_2511086909557190022[137] = 0;
   out_2511086909557190022[138] = 0;
   out_2511086909557190022[139] = 0;
   out_2511086909557190022[140] = 0;
   out_2511086909557190022[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2511086909557190022[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2511086909557190022[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2511086909557190022[144] = 0;
   out_2511086909557190022[145] = 0;
   out_2511086909557190022[146] = 0;
   out_2511086909557190022[147] = 0;
   out_2511086909557190022[148] = 0;
   out_2511086909557190022[149] = 0;
   out_2511086909557190022[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2511086909557190022[151] = 0;
   out_2511086909557190022[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2511086909557190022[153] = 0;
   out_2511086909557190022[154] = 1;
   out_2511086909557190022[155] = 0;
   out_2511086909557190022[156] = 0;
   out_2511086909557190022[157] = 0;
   out_2511086909557190022[158] = 0;
   out_2511086909557190022[159] = 0;
   out_2511086909557190022[160] = 0;
   out_2511086909557190022[161] = 0;
   out_2511086909557190022[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2511086909557190022[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2511086909557190022[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2511086909557190022[165] = 0;
   out_2511086909557190022[166] = 0;
   out_2511086909557190022[167] = 0;
   out_2511086909557190022[168] = 0;
   out_2511086909557190022[169] = 0;
   out_2511086909557190022[170] = 0;
   out_2511086909557190022[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2511086909557190022[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2511086909557190022[173] = 0;
   out_2511086909557190022[174] = 0;
   out_2511086909557190022[175] = 0;
   out_2511086909557190022[176] = 1;
   out_2511086909557190022[177] = 0;
   out_2511086909557190022[178] = 0;
   out_2511086909557190022[179] = 0;
   out_2511086909557190022[180] = 0;
   out_2511086909557190022[181] = 0;
   out_2511086909557190022[182] = 0;
   out_2511086909557190022[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2511086909557190022[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2511086909557190022[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2511086909557190022[186] = 0;
   out_2511086909557190022[187] = 0;
   out_2511086909557190022[188] = 0;
   out_2511086909557190022[189] = 0;
   out_2511086909557190022[190] = 0;
   out_2511086909557190022[191] = 0;
   out_2511086909557190022[192] = 0;
   out_2511086909557190022[193] = 0;
   out_2511086909557190022[194] = 0;
   out_2511086909557190022[195] = 0;
   out_2511086909557190022[196] = 0;
   out_2511086909557190022[197] = 0;
   out_2511086909557190022[198] = 1;
   out_2511086909557190022[199] = 0;
   out_2511086909557190022[200] = 0;
   out_2511086909557190022[201] = 0;
   out_2511086909557190022[202] = 0;
   out_2511086909557190022[203] = 0;
   out_2511086909557190022[204] = 0;
   out_2511086909557190022[205] = 0;
   out_2511086909557190022[206] = 0;
   out_2511086909557190022[207] = 0;
   out_2511086909557190022[208] = 0;
   out_2511086909557190022[209] = 0;
   out_2511086909557190022[210] = 0;
   out_2511086909557190022[211] = 0;
   out_2511086909557190022[212] = 0;
   out_2511086909557190022[213] = 0;
   out_2511086909557190022[214] = 0;
   out_2511086909557190022[215] = 0;
   out_2511086909557190022[216] = 0;
   out_2511086909557190022[217] = 0;
   out_2511086909557190022[218] = 0;
   out_2511086909557190022[219] = 0;
   out_2511086909557190022[220] = 1;
   out_2511086909557190022[221] = 0;
   out_2511086909557190022[222] = 0;
   out_2511086909557190022[223] = 0;
   out_2511086909557190022[224] = 0;
   out_2511086909557190022[225] = 0;
   out_2511086909557190022[226] = 0;
   out_2511086909557190022[227] = 0;
   out_2511086909557190022[228] = 0;
   out_2511086909557190022[229] = 0;
   out_2511086909557190022[230] = 0;
   out_2511086909557190022[231] = 0;
   out_2511086909557190022[232] = 0;
   out_2511086909557190022[233] = 0;
   out_2511086909557190022[234] = 0;
   out_2511086909557190022[235] = 0;
   out_2511086909557190022[236] = 0;
   out_2511086909557190022[237] = 0;
   out_2511086909557190022[238] = 0;
   out_2511086909557190022[239] = 0;
   out_2511086909557190022[240] = 0;
   out_2511086909557190022[241] = 0;
   out_2511086909557190022[242] = 1;
   out_2511086909557190022[243] = 0;
   out_2511086909557190022[244] = 0;
   out_2511086909557190022[245] = 0;
   out_2511086909557190022[246] = 0;
   out_2511086909557190022[247] = 0;
   out_2511086909557190022[248] = 0;
   out_2511086909557190022[249] = 0;
   out_2511086909557190022[250] = 0;
   out_2511086909557190022[251] = 0;
   out_2511086909557190022[252] = 0;
   out_2511086909557190022[253] = 0;
   out_2511086909557190022[254] = 0;
   out_2511086909557190022[255] = 0;
   out_2511086909557190022[256] = 0;
   out_2511086909557190022[257] = 0;
   out_2511086909557190022[258] = 0;
   out_2511086909557190022[259] = 0;
   out_2511086909557190022[260] = 0;
   out_2511086909557190022[261] = 0;
   out_2511086909557190022[262] = 0;
   out_2511086909557190022[263] = 0;
   out_2511086909557190022[264] = 1;
   out_2511086909557190022[265] = 0;
   out_2511086909557190022[266] = 0;
   out_2511086909557190022[267] = 0;
   out_2511086909557190022[268] = 0;
   out_2511086909557190022[269] = 0;
   out_2511086909557190022[270] = 0;
   out_2511086909557190022[271] = 0;
   out_2511086909557190022[272] = 0;
   out_2511086909557190022[273] = 0;
   out_2511086909557190022[274] = 0;
   out_2511086909557190022[275] = 0;
   out_2511086909557190022[276] = 0;
   out_2511086909557190022[277] = 0;
   out_2511086909557190022[278] = 0;
   out_2511086909557190022[279] = 0;
   out_2511086909557190022[280] = 0;
   out_2511086909557190022[281] = 0;
   out_2511086909557190022[282] = 0;
   out_2511086909557190022[283] = 0;
   out_2511086909557190022[284] = 0;
   out_2511086909557190022[285] = 0;
   out_2511086909557190022[286] = 1;
   out_2511086909557190022[287] = 0;
   out_2511086909557190022[288] = 0;
   out_2511086909557190022[289] = 0;
   out_2511086909557190022[290] = 0;
   out_2511086909557190022[291] = 0;
   out_2511086909557190022[292] = 0;
   out_2511086909557190022[293] = 0;
   out_2511086909557190022[294] = 0;
   out_2511086909557190022[295] = 0;
   out_2511086909557190022[296] = 0;
   out_2511086909557190022[297] = 0;
   out_2511086909557190022[298] = 0;
   out_2511086909557190022[299] = 0;
   out_2511086909557190022[300] = 0;
   out_2511086909557190022[301] = 0;
   out_2511086909557190022[302] = 0;
   out_2511086909557190022[303] = 0;
   out_2511086909557190022[304] = 0;
   out_2511086909557190022[305] = 0;
   out_2511086909557190022[306] = 0;
   out_2511086909557190022[307] = 0;
   out_2511086909557190022[308] = 1;
   out_2511086909557190022[309] = 0;
   out_2511086909557190022[310] = 0;
   out_2511086909557190022[311] = 0;
   out_2511086909557190022[312] = 0;
   out_2511086909557190022[313] = 0;
   out_2511086909557190022[314] = 0;
   out_2511086909557190022[315] = 0;
   out_2511086909557190022[316] = 0;
   out_2511086909557190022[317] = 0;
   out_2511086909557190022[318] = 0;
   out_2511086909557190022[319] = 0;
   out_2511086909557190022[320] = 0;
   out_2511086909557190022[321] = 0;
   out_2511086909557190022[322] = 0;
   out_2511086909557190022[323] = 0;
   out_2511086909557190022[324] = 0;
   out_2511086909557190022[325] = 0;
   out_2511086909557190022[326] = 0;
   out_2511086909557190022[327] = 0;
   out_2511086909557190022[328] = 0;
   out_2511086909557190022[329] = 0;
   out_2511086909557190022[330] = 1;
   out_2511086909557190022[331] = 0;
   out_2511086909557190022[332] = 0;
   out_2511086909557190022[333] = 0;
   out_2511086909557190022[334] = 0;
   out_2511086909557190022[335] = 0;
   out_2511086909557190022[336] = 0;
   out_2511086909557190022[337] = 0;
   out_2511086909557190022[338] = 0;
   out_2511086909557190022[339] = 0;
   out_2511086909557190022[340] = 0;
   out_2511086909557190022[341] = 0;
   out_2511086909557190022[342] = 0;
   out_2511086909557190022[343] = 0;
   out_2511086909557190022[344] = 0;
   out_2511086909557190022[345] = 0;
   out_2511086909557190022[346] = 0;
   out_2511086909557190022[347] = 0;
   out_2511086909557190022[348] = 0;
   out_2511086909557190022[349] = 0;
   out_2511086909557190022[350] = 0;
   out_2511086909557190022[351] = 0;
   out_2511086909557190022[352] = 1;
   out_2511086909557190022[353] = 0;
   out_2511086909557190022[354] = 0;
   out_2511086909557190022[355] = 0;
   out_2511086909557190022[356] = 0;
   out_2511086909557190022[357] = 0;
   out_2511086909557190022[358] = 0;
   out_2511086909557190022[359] = 0;
   out_2511086909557190022[360] = 0;
   out_2511086909557190022[361] = 0;
   out_2511086909557190022[362] = 0;
   out_2511086909557190022[363] = 0;
   out_2511086909557190022[364] = 0;
   out_2511086909557190022[365] = 0;
   out_2511086909557190022[366] = 0;
   out_2511086909557190022[367] = 0;
   out_2511086909557190022[368] = 0;
   out_2511086909557190022[369] = 0;
   out_2511086909557190022[370] = 0;
   out_2511086909557190022[371] = 0;
   out_2511086909557190022[372] = 0;
   out_2511086909557190022[373] = 0;
   out_2511086909557190022[374] = 1;
   out_2511086909557190022[375] = 0;
   out_2511086909557190022[376] = 0;
   out_2511086909557190022[377] = 0;
   out_2511086909557190022[378] = 0;
   out_2511086909557190022[379] = 0;
   out_2511086909557190022[380] = 0;
   out_2511086909557190022[381] = 0;
   out_2511086909557190022[382] = 0;
   out_2511086909557190022[383] = 0;
   out_2511086909557190022[384] = 0;
   out_2511086909557190022[385] = 0;
   out_2511086909557190022[386] = 0;
   out_2511086909557190022[387] = 0;
   out_2511086909557190022[388] = 0;
   out_2511086909557190022[389] = 0;
   out_2511086909557190022[390] = 0;
   out_2511086909557190022[391] = 0;
   out_2511086909557190022[392] = 0;
   out_2511086909557190022[393] = 0;
   out_2511086909557190022[394] = 0;
   out_2511086909557190022[395] = 0;
   out_2511086909557190022[396] = 1;
   out_2511086909557190022[397] = 0;
   out_2511086909557190022[398] = 0;
   out_2511086909557190022[399] = 0;
   out_2511086909557190022[400] = 0;
   out_2511086909557190022[401] = 0;
   out_2511086909557190022[402] = 0;
   out_2511086909557190022[403] = 0;
   out_2511086909557190022[404] = 0;
   out_2511086909557190022[405] = 0;
   out_2511086909557190022[406] = 0;
   out_2511086909557190022[407] = 0;
   out_2511086909557190022[408] = 0;
   out_2511086909557190022[409] = 0;
   out_2511086909557190022[410] = 0;
   out_2511086909557190022[411] = 0;
   out_2511086909557190022[412] = 0;
   out_2511086909557190022[413] = 0;
   out_2511086909557190022[414] = 0;
   out_2511086909557190022[415] = 0;
   out_2511086909557190022[416] = 0;
   out_2511086909557190022[417] = 0;
   out_2511086909557190022[418] = 1;
   out_2511086909557190022[419] = 0;
   out_2511086909557190022[420] = 0;
   out_2511086909557190022[421] = 0;
   out_2511086909557190022[422] = 0;
   out_2511086909557190022[423] = 0;
   out_2511086909557190022[424] = 0;
   out_2511086909557190022[425] = 0;
   out_2511086909557190022[426] = 0;
   out_2511086909557190022[427] = 0;
   out_2511086909557190022[428] = 0;
   out_2511086909557190022[429] = 0;
   out_2511086909557190022[430] = 0;
   out_2511086909557190022[431] = 0;
   out_2511086909557190022[432] = 0;
   out_2511086909557190022[433] = 0;
   out_2511086909557190022[434] = 0;
   out_2511086909557190022[435] = 0;
   out_2511086909557190022[436] = 0;
   out_2511086909557190022[437] = 0;
   out_2511086909557190022[438] = 0;
   out_2511086909557190022[439] = 0;
   out_2511086909557190022[440] = 1;
}
void h_4(double *state, double *unused, double *out_3141757845879483186) {
   out_3141757845879483186[0] = state[10] + state[13];
   out_3141757845879483186[1] = state[11] + state[14];
   out_3141757845879483186[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7698807550768287321) {
   out_7698807550768287321[0] = 0;
   out_7698807550768287321[1] = 0;
   out_7698807550768287321[2] = 0;
   out_7698807550768287321[3] = 0;
   out_7698807550768287321[4] = 0;
   out_7698807550768287321[5] = 0;
   out_7698807550768287321[6] = 0;
   out_7698807550768287321[7] = 0;
   out_7698807550768287321[8] = 0;
   out_7698807550768287321[9] = 0;
   out_7698807550768287321[10] = 1;
   out_7698807550768287321[11] = 0;
   out_7698807550768287321[12] = 0;
   out_7698807550768287321[13] = 1;
   out_7698807550768287321[14] = 0;
   out_7698807550768287321[15] = 0;
   out_7698807550768287321[16] = 0;
   out_7698807550768287321[17] = 0;
   out_7698807550768287321[18] = 0;
   out_7698807550768287321[19] = 0;
   out_7698807550768287321[20] = 0;
   out_7698807550768287321[21] = 0;
   out_7698807550768287321[22] = 0;
   out_7698807550768287321[23] = 0;
   out_7698807550768287321[24] = 0;
   out_7698807550768287321[25] = 0;
   out_7698807550768287321[26] = 0;
   out_7698807550768287321[27] = 0;
   out_7698807550768287321[28] = 0;
   out_7698807550768287321[29] = 0;
   out_7698807550768287321[30] = 0;
   out_7698807550768287321[31] = 0;
   out_7698807550768287321[32] = 0;
   out_7698807550768287321[33] = 1;
   out_7698807550768287321[34] = 0;
   out_7698807550768287321[35] = 0;
   out_7698807550768287321[36] = 1;
   out_7698807550768287321[37] = 0;
   out_7698807550768287321[38] = 0;
   out_7698807550768287321[39] = 0;
   out_7698807550768287321[40] = 0;
   out_7698807550768287321[41] = 0;
   out_7698807550768287321[42] = 0;
   out_7698807550768287321[43] = 0;
   out_7698807550768287321[44] = 0;
   out_7698807550768287321[45] = 0;
   out_7698807550768287321[46] = 0;
   out_7698807550768287321[47] = 0;
   out_7698807550768287321[48] = 0;
   out_7698807550768287321[49] = 0;
   out_7698807550768287321[50] = 0;
   out_7698807550768287321[51] = 0;
   out_7698807550768287321[52] = 0;
   out_7698807550768287321[53] = 0;
   out_7698807550768287321[54] = 0;
   out_7698807550768287321[55] = 0;
   out_7698807550768287321[56] = 1;
   out_7698807550768287321[57] = 0;
   out_7698807550768287321[58] = 0;
   out_7698807550768287321[59] = 1;
   out_7698807550768287321[60] = 0;
   out_7698807550768287321[61] = 0;
   out_7698807550768287321[62] = 0;
   out_7698807550768287321[63] = 0;
   out_7698807550768287321[64] = 0;
   out_7698807550768287321[65] = 0;
}
void h_9(double *state, double *unused, double *out_9112719790904260094) {
   out_9112719790904260094[0] = state[10];
   out_9112719790904260094[1] = state[11];
   out_9112719790904260094[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3460717587676816825) {
   out_3460717587676816825[0] = 0;
   out_3460717587676816825[1] = 0;
   out_3460717587676816825[2] = 0;
   out_3460717587676816825[3] = 0;
   out_3460717587676816825[4] = 0;
   out_3460717587676816825[5] = 0;
   out_3460717587676816825[6] = 0;
   out_3460717587676816825[7] = 0;
   out_3460717587676816825[8] = 0;
   out_3460717587676816825[9] = 0;
   out_3460717587676816825[10] = 1;
   out_3460717587676816825[11] = 0;
   out_3460717587676816825[12] = 0;
   out_3460717587676816825[13] = 0;
   out_3460717587676816825[14] = 0;
   out_3460717587676816825[15] = 0;
   out_3460717587676816825[16] = 0;
   out_3460717587676816825[17] = 0;
   out_3460717587676816825[18] = 0;
   out_3460717587676816825[19] = 0;
   out_3460717587676816825[20] = 0;
   out_3460717587676816825[21] = 0;
   out_3460717587676816825[22] = 0;
   out_3460717587676816825[23] = 0;
   out_3460717587676816825[24] = 0;
   out_3460717587676816825[25] = 0;
   out_3460717587676816825[26] = 0;
   out_3460717587676816825[27] = 0;
   out_3460717587676816825[28] = 0;
   out_3460717587676816825[29] = 0;
   out_3460717587676816825[30] = 0;
   out_3460717587676816825[31] = 0;
   out_3460717587676816825[32] = 0;
   out_3460717587676816825[33] = 1;
   out_3460717587676816825[34] = 0;
   out_3460717587676816825[35] = 0;
   out_3460717587676816825[36] = 0;
   out_3460717587676816825[37] = 0;
   out_3460717587676816825[38] = 0;
   out_3460717587676816825[39] = 0;
   out_3460717587676816825[40] = 0;
   out_3460717587676816825[41] = 0;
   out_3460717587676816825[42] = 0;
   out_3460717587676816825[43] = 0;
   out_3460717587676816825[44] = 0;
   out_3460717587676816825[45] = 0;
   out_3460717587676816825[46] = 0;
   out_3460717587676816825[47] = 0;
   out_3460717587676816825[48] = 0;
   out_3460717587676816825[49] = 0;
   out_3460717587676816825[50] = 0;
   out_3460717587676816825[51] = 0;
   out_3460717587676816825[52] = 0;
   out_3460717587676816825[53] = 0;
   out_3460717587676816825[54] = 0;
   out_3460717587676816825[55] = 0;
   out_3460717587676816825[56] = 1;
   out_3460717587676816825[57] = 0;
   out_3460717587676816825[58] = 0;
   out_3460717587676816825[59] = 0;
   out_3460717587676816825[60] = 0;
   out_3460717587676816825[61] = 0;
   out_3460717587676816825[62] = 0;
   out_3460717587676816825[63] = 0;
   out_3460717587676816825[64] = 0;
   out_3460717587676816825[65] = 0;
}
void h_10(double *state, double *unused, double *out_3856818945145830433) {
   out_3856818945145830433[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3856818945145830433[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3856818945145830433[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_43166413901014005) {
   out_43166413901014005[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_43166413901014005[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_43166413901014005[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_43166413901014005[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_43166413901014005[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_43166413901014005[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_43166413901014005[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_43166413901014005[7] = 0;
   out_43166413901014005[8] = 0;
   out_43166413901014005[9] = 0;
   out_43166413901014005[10] = 0;
   out_43166413901014005[11] = 0;
   out_43166413901014005[12] = 0;
   out_43166413901014005[13] = 0;
   out_43166413901014005[14] = 0;
   out_43166413901014005[15] = 0;
   out_43166413901014005[16] = 1;
   out_43166413901014005[17] = 0;
   out_43166413901014005[18] = 0;
   out_43166413901014005[19] = 1;
   out_43166413901014005[20] = 0;
   out_43166413901014005[21] = 0;
   out_43166413901014005[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_43166413901014005[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_43166413901014005[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_43166413901014005[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_43166413901014005[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_43166413901014005[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_43166413901014005[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_43166413901014005[29] = 0;
   out_43166413901014005[30] = 0;
   out_43166413901014005[31] = 0;
   out_43166413901014005[32] = 0;
   out_43166413901014005[33] = 0;
   out_43166413901014005[34] = 0;
   out_43166413901014005[35] = 0;
   out_43166413901014005[36] = 0;
   out_43166413901014005[37] = 0;
   out_43166413901014005[38] = 0;
   out_43166413901014005[39] = 1;
   out_43166413901014005[40] = 0;
   out_43166413901014005[41] = 0;
   out_43166413901014005[42] = 1;
   out_43166413901014005[43] = 0;
   out_43166413901014005[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_43166413901014005[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_43166413901014005[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_43166413901014005[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_43166413901014005[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_43166413901014005[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_43166413901014005[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_43166413901014005[51] = 0;
   out_43166413901014005[52] = 0;
   out_43166413901014005[53] = 0;
   out_43166413901014005[54] = 0;
   out_43166413901014005[55] = 0;
   out_43166413901014005[56] = 0;
   out_43166413901014005[57] = 0;
   out_43166413901014005[58] = 0;
   out_43166413901014005[59] = 0;
   out_43166413901014005[60] = 0;
   out_43166413901014005[61] = 0;
   out_43166413901014005[62] = 1;
   out_43166413901014005[63] = 0;
   out_43166413901014005[64] = 0;
   out_43166413901014005[65] = 1;
}
void h_12(double *state, double *unused, double *out_7199739948876887136) {
   out_7199739948876887136[0] = state[0];
   out_7199739948876887136[1] = state[1];
   out_7199739948876887136[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1317549173725554325) {
   out_1317549173725554325[0] = 1;
   out_1317549173725554325[1] = 0;
   out_1317549173725554325[2] = 0;
   out_1317549173725554325[3] = 0;
   out_1317549173725554325[4] = 0;
   out_1317549173725554325[5] = 0;
   out_1317549173725554325[6] = 0;
   out_1317549173725554325[7] = 0;
   out_1317549173725554325[8] = 0;
   out_1317549173725554325[9] = 0;
   out_1317549173725554325[10] = 0;
   out_1317549173725554325[11] = 0;
   out_1317549173725554325[12] = 0;
   out_1317549173725554325[13] = 0;
   out_1317549173725554325[14] = 0;
   out_1317549173725554325[15] = 0;
   out_1317549173725554325[16] = 0;
   out_1317549173725554325[17] = 0;
   out_1317549173725554325[18] = 0;
   out_1317549173725554325[19] = 0;
   out_1317549173725554325[20] = 0;
   out_1317549173725554325[21] = 0;
   out_1317549173725554325[22] = 0;
   out_1317549173725554325[23] = 1;
   out_1317549173725554325[24] = 0;
   out_1317549173725554325[25] = 0;
   out_1317549173725554325[26] = 0;
   out_1317549173725554325[27] = 0;
   out_1317549173725554325[28] = 0;
   out_1317549173725554325[29] = 0;
   out_1317549173725554325[30] = 0;
   out_1317549173725554325[31] = 0;
   out_1317549173725554325[32] = 0;
   out_1317549173725554325[33] = 0;
   out_1317549173725554325[34] = 0;
   out_1317549173725554325[35] = 0;
   out_1317549173725554325[36] = 0;
   out_1317549173725554325[37] = 0;
   out_1317549173725554325[38] = 0;
   out_1317549173725554325[39] = 0;
   out_1317549173725554325[40] = 0;
   out_1317549173725554325[41] = 0;
   out_1317549173725554325[42] = 0;
   out_1317549173725554325[43] = 0;
   out_1317549173725554325[44] = 0;
   out_1317549173725554325[45] = 0;
   out_1317549173725554325[46] = 1;
   out_1317549173725554325[47] = 0;
   out_1317549173725554325[48] = 0;
   out_1317549173725554325[49] = 0;
   out_1317549173725554325[50] = 0;
   out_1317549173725554325[51] = 0;
   out_1317549173725554325[52] = 0;
   out_1317549173725554325[53] = 0;
   out_1317549173725554325[54] = 0;
   out_1317549173725554325[55] = 0;
   out_1317549173725554325[56] = 0;
   out_1317549173725554325[57] = 0;
   out_1317549173725554325[58] = 0;
   out_1317549173725554325[59] = 0;
   out_1317549173725554325[60] = 0;
   out_1317549173725554325[61] = 0;
   out_1317549173725554325[62] = 0;
   out_1317549173725554325[63] = 0;
   out_1317549173725554325[64] = 0;
   out_1317549173725554325[65] = 0;
}
void h_35(double *state, double *unused, double *out_1452905366377562047) {
   out_1452905366377562047[0] = state[7];
   out_1452905366377562047[1] = state[8];
   out_1452905366377562047[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7381274465568656919) {
   out_7381274465568656919[0] = 0;
   out_7381274465568656919[1] = 0;
   out_7381274465568656919[2] = 0;
   out_7381274465568656919[3] = 0;
   out_7381274465568656919[4] = 0;
   out_7381274465568656919[5] = 0;
   out_7381274465568656919[6] = 0;
   out_7381274465568656919[7] = 1;
   out_7381274465568656919[8] = 0;
   out_7381274465568656919[9] = 0;
   out_7381274465568656919[10] = 0;
   out_7381274465568656919[11] = 0;
   out_7381274465568656919[12] = 0;
   out_7381274465568656919[13] = 0;
   out_7381274465568656919[14] = 0;
   out_7381274465568656919[15] = 0;
   out_7381274465568656919[16] = 0;
   out_7381274465568656919[17] = 0;
   out_7381274465568656919[18] = 0;
   out_7381274465568656919[19] = 0;
   out_7381274465568656919[20] = 0;
   out_7381274465568656919[21] = 0;
   out_7381274465568656919[22] = 0;
   out_7381274465568656919[23] = 0;
   out_7381274465568656919[24] = 0;
   out_7381274465568656919[25] = 0;
   out_7381274465568656919[26] = 0;
   out_7381274465568656919[27] = 0;
   out_7381274465568656919[28] = 0;
   out_7381274465568656919[29] = 0;
   out_7381274465568656919[30] = 1;
   out_7381274465568656919[31] = 0;
   out_7381274465568656919[32] = 0;
   out_7381274465568656919[33] = 0;
   out_7381274465568656919[34] = 0;
   out_7381274465568656919[35] = 0;
   out_7381274465568656919[36] = 0;
   out_7381274465568656919[37] = 0;
   out_7381274465568656919[38] = 0;
   out_7381274465568656919[39] = 0;
   out_7381274465568656919[40] = 0;
   out_7381274465568656919[41] = 0;
   out_7381274465568656919[42] = 0;
   out_7381274465568656919[43] = 0;
   out_7381274465568656919[44] = 0;
   out_7381274465568656919[45] = 0;
   out_7381274465568656919[46] = 0;
   out_7381274465568656919[47] = 0;
   out_7381274465568656919[48] = 0;
   out_7381274465568656919[49] = 0;
   out_7381274465568656919[50] = 0;
   out_7381274465568656919[51] = 0;
   out_7381274465568656919[52] = 0;
   out_7381274465568656919[53] = 1;
   out_7381274465568656919[54] = 0;
   out_7381274465568656919[55] = 0;
   out_7381274465568656919[56] = 0;
   out_7381274465568656919[57] = 0;
   out_7381274465568656919[58] = 0;
   out_7381274465568656919[59] = 0;
   out_7381274465568656919[60] = 0;
   out_7381274465568656919[61] = 0;
   out_7381274465568656919[62] = 0;
   out_7381274465568656919[63] = 0;
   out_7381274465568656919[64] = 0;
   out_7381274465568656919[65] = 0;
}
void h_32(double *state, double *unused, double *out_5908105993997669270) {
   out_5908105993997669270[0] = state[3];
   out_5908105993997669270[1] = state[4];
   out_5908105993997669270[2] = state[5];
   out_5908105993997669270[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7250109680627916450) {
   out_7250109680627916450[0] = 0;
   out_7250109680627916450[1] = 0;
   out_7250109680627916450[2] = 0;
   out_7250109680627916450[3] = 1;
   out_7250109680627916450[4] = 0;
   out_7250109680627916450[5] = 0;
   out_7250109680627916450[6] = 0;
   out_7250109680627916450[7] = 0;
   out_7250109680627916450[8] = 0;
   out_7250109680627916450[9] = 0;
   out_7250109680627916450[10] = 0;
   out_7250109680627916450[11] = 0;
   out_7250109680627916450[12] = 0;
   out_7250109680627916450[13] = 0;
   out_7250109680627916450[14] = 0;
   out_7250109680627916450[15] = 0;
   out_7250109680627916450[16] = 0;
   out_7250109680627916450[17] = 0;
   out_7250109680627916450[18] = 0;
   out_7250109680627916450[19] = 0;
   out_7250109680627916450[20] = 0;
   out_7250109680627916450[21] = 0;
   out_7250109680627916450[22] = 0;
   out_7250109680627916450[23] = 0;
   out_7250109680627916450[24] = 0;
   out_7250109680627916450[25] = 0;
   out_7250109680627916450[26] = 1;
   out_7250109680627916450[27] = 0;
   out_7250109680627916450[28] = 0;
   out_7250109680627916450[29] = 0;
   out_7250109680627916450[30] = 0;
   out_7250109680627916450[31] = 0;
   out_7250109680627916450[32] = 0;
   out_7250109680627916450[33] = 0;
   out_7250109680627916450[34] = 0;
   out_7250109680627916450[35] = 0;
   out_7250109680627916450[36] = 0;
   out_7250109680627916450[37] = 0;
   out_7250109680627916450[38] = 0;
   out_7250109680627916450[39] = 0;
   out_7250109680627916450[40] = 0;
   out_7250109680627916450[41] = 0;
   out_7250109680627916450[42] = 0;
   out_7250109680627916450[43] = 0;
   out_7250109680627916450[44] = 0;
   out_7250109680627916450[45] = 0;
   out_7250109680627916450[46] = 0;
   out_7250109680627916450[47] = 0;
   out_7250109680627916450[48] = 0;
   out_7250109680627916450[49] = 1;
   out_7250109680627916450[50] = 0;
   out_7250109680627916450[51] = 0;
   out_7250109680627916450[52] = 0;
   out_7250109680627916450[53] = 0;
   out_7250109680627916450[54] = 0;
   out_7250109680627916450[55] = 0;
   out_7250109680627916450[56] = 0;
   out_7250109680627916450[57] = 0;
   out_7250109680627916450[58] = 0;
   out_7250109680627916450[59] = 0;
   out_7250109680627916450[60] = 0;
   out_7250109680627916450[61] = 0;
   out_7250109680627916450[62] = 0;
   out_7250109680627916450[63] = 0;
   out_7250109680627916450[64] = 0;
   out_7250109680627916450[65] = 0;
   out_7250109680627916450[66] = 0;
   out_7250109680627916450[67] = 0;
   out_7250109680627916450[68] = 0;
   out_7250109680627916450[69] = 0;
   out_7250109680627916450[70] = 0;
   out_7250109680627916450[71] = 0;
   out_7250109680627916450[72] = 1;
   out_7250109680627916450[73] = 0;
   out_7250109680627916450[74] = 0;
   out_7250109680627916450[75] = 0;
   out_7250109680627916450[76] = 0;
   out_7250109680627916450[77] = 0;
   out_7250109680627916450[78] = 0;
   out_7250109680627916450[79] = 0;
   out_7250109680627916450[80] = 0;
   out_7250109680627916450[81] = 0;
   out_7250109680627916450[82] = 0;
   out_7250109680627916450[83] = 0;
   out_7250109680627916450[84] = 0;
   out_7250109680627916450[85] = 0;
   out_7250109680627916450[86] = 0;
   out_7250109680627916450[87] = 0;
}
void h_13(double *state, double *unused, double *out_6039507351919823679) {
   out_6039507351919823679[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6039507351919823679[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6039507351919823679[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3640700776108874079) {
   out_3640700776108874079[0] = 0;
   out_3640700776108874079[1] = 0;
   out_3640700776108874079[2] = 0;
   out_3640700776108874079[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3640700776108874079[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3640700776108874079[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3640700776108874079[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3640700776108874079[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3640700776108874079[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3640700776108874079[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3640700776108874079[10] = 0;
   out_3640700776108874079[11] = 0;
   out_3640700776108874079[12] = 0;
   out_3640700776108874079[13] = 0;
   out_3640700776108874079[14] = 0;
   out_3640700776108874079[15] = 0;
   out_3640700776108874079[16] = 0;
   out_3640700776108874079[17] = 0;
   out_3640700776108874079[18] = 0;
   out_3640700776108874079[19] = 0;
   out_3640700776108874079[20] = 0;
   out_3640700776108874079[21] = 0;
   out_3640700776108874079[22] = 0;
   out_3640700776108874079[23] = 0;
   out_3640700776108874079[24] = 0;
   out_3640700776108874079[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3640700776108874079[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3640700776108874079[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3640700776108874079[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3640700776108874079[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3640700776108874079[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3640700776108874079[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3640700776108874079[32] = 0;
   out_3640700776108874079[33] = 0;
   out_3640700776108874079[34] = 0;
   out_3640700776108874079[35] = 0;
   out_3640700776108874079[36] = 0;
   out_3640700776108874079[37] = 0;
   out_3640700776108874079[38] = 0;
   out_3640700776108874079[39] = 0;
   out_3640700776108874079[40] = 0;
   out_3640700776108874079[41] = 0;
   out_3640700776108874079[42] = 0;
   out_3640700776108874079[43] = 0;
   out_3640700776108874079[44] = 0;
   out_3640700776108874079[45] = 0;
   out_3640700776108874079[46] = 0;
   out_3640700776108874079[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3640700776108874079[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3640700776108874079[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3640700776108874079[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3640700776108874079[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3640700776108874079[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3640700776108874079[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3640700776108874079[54] = 0;
   out_3640700776108874079[55] = 0;
   out_3640700776108874079[56] = 0;
   out_3640700776108874079[57] = 0;
   out_3640700776108874079[58] = 0;
   out_3640700776108874079[59] = 0;
   out_3640700776108874079[60] = 0;
   out_3640700776108874079[61] = 0;
   out_3640700776108874079[62] = 0;
   out_3640700776108874079[63] = 0;
   out_3640700776108874079[64] = 0;
   out_3640700776108874079[65] = 0;
}
void h_14(double *state, double *unused, double *out_9112719790904260094) {
   out_9112719790904260094[0] = state[10];
   out_9112719790904260094[1] = state[11];
   out_9112719790904260094[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3460717587676816825) {
   out_3460717587676816825[0] = 0;
   out_3460717587676816825[1] = 0;
   out_3460717587676816825[2] = 0;
   out_3460717587676816825[3] = 0;
   out_3460717587676816825[4] = 0;
   out_3460717587676816825[5] = 0;
   out_3460717587676816825[6] = 0;
   out_3460717587676816825[7] = 0;
   out_3460717587676816825[8] = 0;
   out_3460717587676816825[9] = 0;
   out_3460717587676816825[10] = 1;
   out_3460717587676816825[11] = 0;
   out_3460717587676816825[12] = 0;
   out_3460717587676816825[13] = 0;
   out_3460717587676816825[14] = 0;
   out_3460717587676816825[15] = 0;
   out_3460717587676816825[16] = 0;
   out_3460717587676816825[17] = 0;
   out_3460717587676816825[18] = 0;
   out_3460717587676816825[19] = 0;
   out_3460717587676816825[20] = 0;
   out_3460717587676816825[21] = 0;
   out_3460717587676816825[22] = 0;
   out_3460717587676816825[23] = 0;
   out_3460717587676816825[24] = 0;
   out_3460717587676816825[25] = 0;
   out_3460717587676816825[26] = 0;
   out_3460717587676816825[27] = 0;
   out_3460717587676816825[28] = 0;
   out_3460717587676816825[29] = 0;
   out_3460717587676816825[30] = 0;
   out_3460717587676816825[31] = 0;
   out_3460717587676816825[32] = 0;
   out_3460717587676816825[33] = 1;
   out_3460717587676816825[34] = 0;
   out_3460717587676816825[35] = 0;
   out_3460717587676816825[36] = 0;
   out_3460717587676816825[37] = 0;
   out_3460717587676816825[38] = 0;
   out_3460717587676816825[39] = 0;
   out_3460717587676816825[40] = 0;
   out_3460717587676816825[41] = 0;
   out_3460717587676816825[42] = 0;
   out_3460717587676816825[43] = 0;
   out_3460717587676816825[44] = 0;
   out_3460717587676816825[45] = 0;
   out_3460717587676816825[46] = 0;
   out_3460717587676816825[47] = 0;
   out_3460717587676816825[48] = 0;
   out_3460717587676816825[49] = 0;
   out_3460717587676816825[50] = 0;
   out_3460717587676816825[51] = 0;
   out_3460717587676816825[52] = 0;
   out_3460717587676816825[53] = 0;
   out_3460717587676816825[54] = 0;
   out_3460717587676816825[55] = 0;
   out_3460717587676816825[56] = 1;
   out_3460717587676816825[57] = 0;
   out_3460717587676816825[58] = 0;
   out_3460717587676816825[59] = 0;
   out_3460717587676816825[60] = 0;
   out_3460717587676816825[61] = 0;
   out_3460717587676816825[62] = 0;
   out_3460717587676816825[63] = 0;
   out_3460717587676816825[64] = 0;
   out_3460717587676816825[65] = 0;
}
void h_33(double *state, double *unused, double *out_8572335191748983603) {
   out_8572335191748983603[0] = state[16];
   out_8572335191748983603[1] = state[17];
   out_8572335191748983603[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2815311827705057510) {
   out_2815311827705057510[0] = 0;
   out_2815311827705057510[1] = 0;
   out_2815311827705057510[2] = 0;
   out_2815311827705057510[3] = 0;
   out_2815311827705057510[4] = 0;
   out_2815311827705057510[5] = 0;
   out_2815311827705057510[6] = 0;
   out_2815311827705057510[7] = 0;
   out_2815311827705057510[8] = 0;
   out_2815311827705057510[9] = 0;
   out_2815311827705057510[10] = 0;
   out_2815311827705057510[11] = 0;
   out_2815311827705057510[12] = 0;
   out_2815311827705057510[13] = 0;
   out_2815311827705057510[14] = 0;
   out_2815311827705057510[15] = 0;
   out_2815311827705057510[16] = 1;
   out_2815311827705057510[17] = 0;
   out_2815311827705057510[18] = 0;
   out_2815311827705057510[19] = 0;
   out_2815311827705057510[20] = 0;
   out_2815311827705057510[21] = 0;
   out_2815311827705057510[22] = 0;
   out_2815311827705057510[23] = 0;
   out_2815311827705057510[24] = 0;
   out_2815311827705057510[25] = 0;
   out_2815311827705057510[26] = 0;
   out_2815311827705057510[27] = 0;
   out_2815311827705057510[28] = 0;
   out_2815311827705057510[29] = 0;
   out_2815311827705057510[30] = 0;
   out_2815311827705057510[31] = 0;
   out_2815311827705057510[32] = 0;
   out_2815311827705057510[33] = 0;
   out_2815311827705057510[34] = 0;
   out_2815311827705057510[35] = 0;
   out_2815311827705057510[36] = 0;
   out_2815311827705057510[37] = 0;
   out_2815311827705057510[38] = 0;
   out_2815311827705057510[39] = 1;
   out_2815311827705057510[40] = 0;
   out_2815311827705057510[41] = 0;
   out_2815311827705057510[42] = 0;
   out_2815311827705057510[43] = 0;
   out_2815311827705057510[44] = 0;
   out_2815311827705057510[45] = 0;
   out_2815311827705057510[46] = 0;
   out_2815311827705057510[47] = 0;
   out_2815311827705057510[48] = 0;
   out_2815311827705057510[49] = 0;
   out_2815311827705057510[50] = 0;
   out_2815311827705057510[51] = 0;
   out_2815311827705057510[52] = 0;
   out_2815311827705057510[53] = 0;
   out_2815311827705057510[54] = 0;
   out_2815311827705057510[55] = 0;
   out_2815311827705057510[56] = 0;
   out_2815311827705057510[57] = 0;
   out_2815311827705057510[58] = 0;
   out_2815311827705057510[59] = 0;
   out_2815311827705057510[60] = 0;
   out_2815311827705057510[61] = 0;
   out_2815311827705057510[62] = 1;
   out_2815311827705057510[63] = 0;
   out_2815311827705057510[64] = 0;
   out_2815311827705057510[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3056451431007154119) {
  H(in_vec, out_3056451431007154119);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1292429367592691243) {
  err_fun(nom_x, delta_x, out_1292429367592691243);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7203208365257071560) {
  inv_err_fun(nom_x, true_x, out_7203208365257071560);
}
void live_H_mod_fun(double *state, double *out_9109133853090027472) {
  H_mod_fun(state, out_9109133853090027472);
}
void live_f_fun(double *state, double dt, double *out_1380210285864909136) {
  f_fun(state,  dt, out_1380210285864909136);
}
void live_F_fun(double *state, double dt, double *out_2511086909557190022) {
  F_fun(state,  dt, out_2511086909557190022);
}
void live_h_4(double *state, double *unused, double *out_3141757845879483186) {
  h_4(state, unused, out_3141757845879483186);
}
void live_H_4(double *state, double *unused, double *out_7698807550768287321) {
  H_4(state, unused, out_7698807550768287321);
}
void live_h_9(double *state, double *unused, double *out_9112719790904260094) {
  h_9(state, unused, out_9112719790904260094);
}
void live_H_9(double *state, double *unused, double *out_3460717587676816825) {
  H_9(state, unused, out_3460717587676816825);
}
void live_h_10(double *state, double *unused, double *out_3856818945145830433) {
  h_10(state, unused, out_3856818945145830433);
}
void live_H_10(double *state, double *unused, double *out_43166413901014005) {
  H_10(state, unused, out_43166413901014005);
}
void live_h_12(double *state, double *unused, double *out_7199739948876887136) {
  h_12(state, unused, out_7199739948876887136);
}
void live_H_12(double *state, double *unused, double *out_1317549173725554325) {
  H_12(state, unused, out_1317549173725554325);
}
void live_h_35(double *state, double *unused, double *out_1452905366377562047) {
  h_35(state, unused, out_1452905366377562047);
}
void live_H_35(double *state, double *unused, double *out_7381274465568656919) {
  H_35(state, unused, out_7381274465568656919);
}
void live_h_32(double *state, double *unused, double *out_5908105993997669270) {
  h_32(state, unused, out_5908105993997669270);
}
void live_H_32(double *state, double *unused, double *out_7250109680627916450) {
  H_32(state, unused, out_7250109680627916450);
}
void live_h_13(double *state, double *unused, double *out_6039507351919823679) {
  h_13(state, unused, out_6039507351919823679);
}
void live_H_13(double *state, double *unused, double *out_3640700776108874079) {
  H_13(state, unused, out_3640700776108874079);
}
void live_h_14(double *state, double *unused, double *out_9112719790904260094) {
  h_14(state, unused, out_9112719790904260094);
}
void live_H_14(double *state, double *unused, double *out_3460717587676816825) {
  H_14(state, unused, out_3460717587676816825);
}
void live_h_33(double *state, double *unused, double *out_8572335191748983603) {
  h_33(state, unused, out_8572335191748983603);
}
void live_H_33(double *state, double *unused, double *out_2815311827705057510) {
  H_33(state, unused, out_2815311827705057510);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
